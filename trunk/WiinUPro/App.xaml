<Application x:Class="WiinUPro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WiinUPro"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="Windows\MainWindow.xaml">
    <Application.Resources>
        <!--#region Colors-->
        <!-- Color Palette Based on https://dribbble.com/shots/2318226-Colors -->
        <!-- Accent Colors -->
        <Color x:Key="Red">#FFE54C3E</Color>
        <Color x:Key="RedDark">#FFC1392B</Color>
        <Color x:Key="Pink">#FFF15354</Color>
        <Color x:Key="PinkDark">#FFE63A38</Color>
        <Color x:Key="Orange">#FFE67F23</Color>
        <Color x:Key="OrangeDark">#FFD55300</Color>
        <Color x:Key="Gold">#FFF1C40F</Color>
        <Color x:Key="GoldDark">#FFE59701</Color>
        <Color x:Key="Yellow">#FFEAE05A</Color>
        <Color x:Key="YellowDark">#FFD9C322</Color>
        <Color x:Key="Green">#FF2FCC71</Color>
        <Color x:Key="GreenDark">#FF28AC60</Color>
        <Color x:Key="Pea">#FFa5C53C</Color>
        <Color x:Key="PeaDark">#FF8EAF20</Color>
        <!-- Blues -->
        <Color x:Key="Denim">#FF22374C</Color>
        <Color x:Key="DenimDark">#FF040A18</Color>
        <Color x:Key="Spruce">#FF34495A</Color>
        <Color x:Key="SpruceDark">#FF2E4354</Color>
        <Color x:Key="Cobalt">#FF0076A8</Color>
        <Color x:Key="CobaltDark">#FF00548A</Color>
        <Color x:Key="Blue">#FF3497DB</Color>
        <Color x:Key="BlueDark">#FF297FB8</Color>
        <Color x:Key="Aegean">#FF3A6f81</Color>
        <Color x:Key="AegeanDark">#FF376272</Color>
        <Color x:Key="Turquoise">#FF2D848E</Color>
        <Color x:Key="TurquoiseDark">#FF18656F</Color>
        <Color x:Key="Teal">#FF74CCD0</Color>
        <Color x:Key="TealDark">#FF389FA8</Color>
        <!-- Base Colors -->
        <Color x:Key="B800">#FF2B2B2B</Color>
        <Color x:Key="B850">#FF262626</Color>
        <Color x:Key="B700">#FF344851</Color>
        <Color x:Key="B750">#FF0B1419</Color>
        <Color x:Key="B600">#FF67767D</Color>
        <Color x:Key="B650">#FF2A373F</Color>
        <Color x:Key="B500">#FF99A2A7</Color>
        <Color x:Key="B550">#FF5C6971</Color>
        <Color x:Key="B400">#FF95A5A5</Color>
        <Color x:Key="B450">#FF7F8D8E</Color>
        <Color x:Key="B300">#FFCCD2D2</Color>
        <Color x:Key="B350">#FFA3ABAE</Color>
        <Color x:Key="B200">#FFEBF1F1</Color>
        <Color x:Key="B250">#FFBEC3C7</Color>
        <!--#endregion-->

        <!--#region Brushes-->
        <!-- Named by ideal use -->
        <SolidColorBrush x:Key="BackgroundMain" Color="{StaticResource B800}" />
        <SolidColorBrush x:Key="BackgroundSub" Color="{StaticResource B500}" />
        <SolidColorBrush x:Key="CheckForground" Color="{StaticResource B700}" />
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Tab">
            <GradientStop Color="{StaticResource B200}" Offset="0"/>
            <GradientStop Color="{StaticResource B350}" Offset="0.95"/>
            <GradientStop Color="{StaticResource B750}" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="TabSelected">
            <GradientStop Color="{StaticResource B300}" Offset="0"/>
            <GradientStop Color="{StaticResource Blue}" Offset="0.05"/>
            <GradientStop Color="{StaticResource BlueDark}" Offset="0.95"/>
            <GradientStop Color="{StaticResource B750}" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TextHeader" Color="{StaticResource B750}" />
        <SolidColorBrush x:Key="TextBody" Color="{StaticResource B850}" />
        <SolidColorBrush x:Key="Outline" Color="{StaticResource Denim}" />
        <SolidColorBrush x:Key="OutlineHighlight" Color ="{StaticResource Blue}" />
        <SolidColorBrush x:Key="ButtonBasic" Color="{StaticResource DenimDark}" />
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="KeyboardKey">
            <GradientStop Color="{StaticResource B300}" Offset="0"/>
            <GradientStop Color="{StaticResource B500}" Offset="0.05"/>
            <GradientStop Color="{StaticResource B600}" Offset="0.95"/>
            <GradientStop Color="{StaticResource B750}" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="KeyboardKeySelected">
            <GradientStop Color="{StaticResource B300}" Offset="0"/>
            <GradientStop Color="{StaticResource Blue }" Offset="0.05"/>
            <GradientStop Color="{StaticResource CobaltDark}" Offset="0.95"/>
            <GradientStop Color="{StaticResource B750}" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CheckBoxBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource Orange}" Offset="0.071"/>
            <GradientStop Color="#FFEBF1F1"/>
            <GradientStop Color="{DynamicResource B850}" Offset="0.996"/>
            <GradientStop Color="{DynamicResource OrangeDark}" Offset="0.8"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CheckBoxPressedBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource OrangeDark}" Offset="0.071"/>
            <GradientStop Color="#FFEBF1F1"/>
            <GradientStop Color="{DynamicResource B850}" Offset="0.996"/>
            <GradientStop Color="{DynamicResource RedDark}" Offset="0.8"/>
        </LinearGradientBrush>
        <!--#endregion-->
        
        <!-- Constants -->
        <sys:Double x:Key="KeySize">42</sys:Double>

        <!--#region Control Styles-->
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style TargetType="GroupBox" x:Key="GroupBoxStyle" >
            <Setter Property="Foreground" Value="{StaticResource TextBody}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Outline}"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                            <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                        <Binding ElementName="Header" Path="ActualWidth" />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontWeight="Bold"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="BasicButton">
            <Setter Property="Foreground" Value="{StaticResource ButtonBasic}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="{StaticResource Outline}" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="{StaticResource Cobalt}"/>
                                        <GradientStop Offset="0.3" Color="{StaticResource Teal}"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="{StaticResource CobaltDark}"/>
                                            <GradientStop Offset="0.3" Color="{StaticResource TealDark}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="AcceptButton">
            <Setter Property="Foreground" Value="{StaticResource ButtonBasic}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="{StaticResource Outline}" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="{StaticResource GreenDark}"/>
                                        <GradientStop Offset="0.2" Color="{StaticResource Teal}"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="{StaticResource GreenDark}"/>
                                            <GradientStop Offset="0.4" Color="{StaticResource Turquoise}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="CautionButton">
            <Setter Property="Foreground" Value="{StaticResource ButtonBasic}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="{StaticResource Outline}" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="{StaticResource GoldDark}"/>
                                        <GradientStop Offset="0.2" Color="{StaticResource Yellow}"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="{StaticResource GoldDark}"/>
                                            <GradientStop Offset="0.4" Color="{StaticResource OrangeDark}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="WarningButton">
            <Setter Property="Foreground" Value="{StaticResource ButtonBasic}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="{StaticResource Outline}" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="{StaticResource RedDark}"/>
                                        <GradientStop Offset="0.2" Color="{StaticResource Pink}"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="0.8" Color="{StaticResource RedDark}"/>
                                            <GradientStop Offset="0.2" Color="{StaticResource PinkDark}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="KeyButton">
            <Setter Property="Foreground" Value="{StaticResource ButtonBasic}" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderBrush="{StaticResource Outline}" BorderThickness="2" Background="{StaticResource KeyboardKey}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" TextElement.FontSize="16" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="{StaticResource CobaltDark}"/>
                                            <GradientStop Offset="0.3" Color="{StaticResource TealDark}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="KeyButtonActive" BasedOn="{StaticResource KeyButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderBrush="{StaticResource Outline}" BorderThickness="2" Background="{StaticResource KeyboardKeySelected}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" TextElement.FontSize="16" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="{StaticResource CobaltDark}"/>
                                            <GradientStop Offset="0.3" Color="{StaticResource TealDark}"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OutlineHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
            <Setter Property="Foreground" Value="{StaticResource TextHeader}" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="14" Height="14" CornerRadius="2" Background="{StaticResource CheckBoxBrush}" BorderThickness="1" BorderBrush="{StaticResource Outline}">
                                    <Path  Margin="2,1,0,0"
                                        Width="9" Height="9" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="{StaticResource Outline}"
                                        StrokeThickness="2"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,-1,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource OutlineHighlight}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource OutlineHighlight}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CheckBoxPressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundSub}" />
                                <Setter Property="Foreground" Value="{StaticResource CheckForground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#region Slider-->
        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
         TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Width" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse" StrokeThickness="1" Stroke="{StaticResource Outline}" Fill="{StaticResource CheckBoxBrush}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Blue}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource B250}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="BasicSliderHorizontal" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Height="4" Visibility="Collapsed" Fill="{StaticResource Outline}" />
                <Border x:Name="TrackBackground" CornerRadius="2" Height="6" Grid.Row="1" BorderThickness="1" BorderBrush="{StaticResource Outline}" Background="{DynamicResource TextBody}" />
                <Track Grid.Row="1" x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="{StaticResource Outline}" Placement="Bottom" Height="4"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Template when the orientation of the Slider is Vertical.-->
        <ControlTemplate x:Key="BasicSliderVertical"
                   TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                          MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
               SnapsToDevicePixels="True"
               Placement="Left"
               Width="4"
               Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border x:Name="TrackBackground"
              Margin="0"
              CornerRadius="2"
              Width="4"
              Grid.Column="1"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0"
                               StartPoint="0.25,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Column="1"
             x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
               SnapsToDevicePixels="True"
               Grid.Column="2"
               Fill="{TemplateBinding Foreground}"
               Placement="Right"
               Width="4"
               Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
               Value="TopLeft">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="BottomRight">
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="Both">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="BasicSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Foreground" Value="{StaticResource Outline}" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="Template" Value="{StaticResource BasicSliderHorizontal}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="104" />
                    <Setter Property="Template" Value="{StaticResource BasicSliderVertical}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonStyle">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Ellipse x:Name="Border" StrokeThickness="1"  Fill="{StaticResource CheckBoxBrush}" Stroke="{StaticResource Outline}" />
                                    <Ellipse x:Name="CheckMark" Margin="4" Visibility="Collapsed" Fill="{StaticResource Outline}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource OutlineHighlight}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource Outline}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource BackgroundSub}" />
                                <Setter Property="Foreground" Value="{StaticResource CheckForground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </Application.Resources>
</Application>
